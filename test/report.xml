<testsuites name="Mocha Tests">
  <testsuite name="Master Function appsettings.js Units Azure web application setting tests" tests="3" errors="0" failures="0" skipped="0" timestamp="2018-06-10T12:32:22" time="0.034">
    <testcase classname="Master Function appsettings.js Units Azure web application setting tests" name="checks getAppsettings()" time="0.004">
    </testcase>
    <testcase classname="Master Function appsettings.js Units Azure web application setting tests" name="checks setAppsettings()" time="0.007">
    </testcase>
    <testcase classname="Master Function appsettings.js Units Azure web application setting tests" name="checks updateAppsettings()" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="Master Function appstats.js Units Azure web application statistics tests" tests="3" errors="0" failures="0" skipped="0" timestamp="2018-06-10T12:32:22" time="0.056">
    <testcase classname="Master Function appstats.js Units Azure web application statistics tests" name="checks getAppStats() empty" time="0.032">
    </testcase>
    <testcase classname="Master Function appstats.js Units Azure web application statistics tests" name="checks getAppStats() success" time="0.003">
    </testcase>
    <testcase classname="Master Function appstats.js Units Azure web application statistics tests" name="checks getAppStats() errors" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Master Function endpoints.js Units AL endpoints retrieval tests" tests="2" errors="0" failures="0" skipped="0" timestamp="2018-06-10T12:32:22" time="0.015">
    <testcase classname="Master Function endpoints.js Units AL endpoints retrieval tests" name="checks endpoints values are reused if already fetched" time="0.002">
      <system-out><![CDATA[VERBOSE: Reuse Ingest endpoint existing-ingest-endpoint
VERBOSE: Reuse Azcollect endpoint existing-azcollect-endpoint
]]></system-out>
    </testcase>
    <testcase classname="Master Function endpoints.js Units AL endpoints retrieval tests" name="checks endpoints values are saved as app settings" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="Master Function o365collector.js Units _checkEnableAuditStreams()" tests="5" errors="0" failures="0" skipped="0" timestamp="2018-06-10T12:32:22" time="0.007">
    <testcase classname="Master Function o365collector.js Units _checkEnableAuditStreams()" name="enables configured streams" time="0.003">
    </testcase>
    <testcase classname="Master Function o365collector.js Units _checkEnableAuditStreams()" name="checks already enabled streams with proper webhook configs" time="0">
      <system-out><![CDATA[VERBOSE: Stream already enabled Audit.AzureActiveDirectory
VERBOSE: Stream already enabled Audit.Exchange
VERBOSE: Stream already enabled Audit.SharePoint
VERBOSE: Stream already enabled Audit.General
]]></system-out>
    </testcase>
    <testcase classname="Master Function o365collector.js Units _checkEnableAuditStreams()" name="checks subscriptionStart is called for already enabled webhooks if web app is being reinstalled" time="0.001">
      <system-out><![CDATA[VERBOSE: Stream already enabled Audit.SharePoint
VERBOSE: Stream already enabled Audit.General
]]></system-out>
    </testcase>
    <testcase classname="Master Function o365collector.js Units _checkEnableAuditStreams()" name="checks subscriptionStart is called for disabled streams" time="0">
      <system-out><![CDATA[VERBOSE: Stream already enabled Audit.General
]]></system-out>
    </testcase>
    <testcase classname="Master Function o365collector.js Units _checkEnableAuditStreams()" name="checks subscriptionStart is called for disabled webhooks" time="0">
      <system-out><![CDATA[VERBOSE: Stream already enabled Audit.AzureActiveDirectory
]]></system-out>
    </testcase>
  </testsuite>
  <testsuite name="Master Function o365collector.js Units O365 collector checkin tests" tests="4" errors="0" failures="0" skipped="0" timestamp="2018-06-10T12:32:22" time="0.114">
    <testcase classname="Master Function o365collector.js Units O365 collector checkin tests" name="checks successful OK checkin" time="0.014">
      <system-out><![CDATA[VERBOSE: Stream already enabled Audit.AzureActiveDirectory
]]></system-out>
    </testcase>
    <testcase classname="Master Function o365collector.js Units O365 collector checkin tests" name="checks successful OK checkin, stats Error" time="0.047">
      <system-out><![CDATA[VERBOSE: Stream already enabled Audit.AzureActiveDirectory
]]></system-out>
    </testcase>
    <testcase classname="Master Function o365collector.js Units O365 collector checkin tests" name="checks successful Error checkin during Office subscriptionList error" time="0.033">
    </testcase>
    <testcase classname="Master Function o365collector.js Units O365 collector checkin tests" name="checks successful Error checkin during Office subscriptionStart error" time="0.005">
      <system-out><![CDATA[VERBOSE: Stream already enabled Audit.AzureActiveDirectory
]]></system-out>
    </testcase>
  </testsuite>
  <testsuite name="Master Function o365collector.js Units O365 collector register tests" tests="2" errors="0" failures="0" skipped="0" timestamp="2018-06-10T12:32:22" time="0.078">
    <testcase classname="Master Function o365collector.js Units O365 collector register tests" name="checks collector and host id are reused if already registered" time="0.005">
      <system-out><![CDATA[VERBOSE: Reuse collector id existing-collector-id
]]></system-out>
    </testcase>
    <testcase classname="Master Function o365collector.js Units O365 collector register tests" name="checks updateSettings is called during registration" time="0.008">
    </testcase>
  </testsuite>
</testsuites>